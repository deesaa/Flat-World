ObjectName = "Player"

Shadows = true;
isPlayer = true;

LuaControllersHook = 
{
	SendControlles = true;
}

Moving = 
{
	MoveSpeed = 0.005f,
	StupidUnstoppableMovingOnRandomPositions = false;
}

Collision =
{
	sphereRadius = 0.26,
	shiftX = 0.0,
	shiftY = 0.0
}

Inventory =
{	
	numCellsInLine = 3, 
	numLines = 3,
	shiftX = 2.0,
	shiftY = 2.0
} 

Anatomy = 
{	
	Structure = 
	{
		{{"Nothing", "Nothing"}, {"Head", "Nothing"}, 	 {"Nothing", "Nothing"}},
		{{"Arm", "Left"},  		 {"Body", "Nothing"}, 	 {"Arm", "Right"}},
		{{"Hand", "Left"}, 		 {"Nothing", "Nothing"}, {"Hand", "Right"}},
		{{"Leg", "Left"},  		 {"Nothing", "Nothing"}, {"Leg", "Right"}},
		{{"Foot", "Left"}, 		 {"Nothing", "Nothing"}, {"Foot", "Right"}}
	}
}

Equipment =
{
	equipInventory = Anatomy.Structure;
	shiftX = 6.0;
	shiftY = 6.0;
}

Picking =
{
	pickDistance = 2,
	
	PickableObjects =
	{
		
	}
}

Looking =
{
	VecViewDirX = 0.0f;
	VecViewDirY = 1.0f;  
	viewAngle = 45.0f; 
	viewSphereRadius = 7.5f;  
	rotateSpeed = 0.1f;
}

Battle = 
{
	maxHealth = 100,
	health = 90,
	HealthBar = 
	{
		UpdateHook = "HealthBarUpdateHook",
		Location = {x = {0, "Pixel"}, y = {0, "Pixel"}, width = {100, "Percent"}, height = {100, "Percent"}},
		Contains =
		{ 
			{
				Name = "HealthBarBackground",
				Type = "Window",
				Location = {x = {25, "Percent"}, y = {2, "Percent"}, width = {50, "Percent"}, height = {50, "Pixel"}},
				Contains =
				{
					{
						Name = "HealthBarBorder",
						Type = "Border",
						Lighting = false,
						Color = {Mode = 1, "Red"},
						Location = {x = {0, "Pixel"}, y = {0, "Pixel"}, width = {100, "Percent"}, height = {100, "Percent"}},
						Contains = 
						{
						}
					},
					{
						Name = "HealthOutput",
						Type = "FillingBar",
						Texture = "data/GUI/PerHealScale.png",

						Location = {x = {5, "Percent"}, y = {25, "Percent"}, width = {90, "Percent"}, height = {50, "Percent"}},
						Border = {Color = {Mode = 1, 127, 0, 0, 127}, Lighting = false},
						Contains = 
						{
							{
								Name = "HealthOutputBorder",
								Type = "Border",
								Lighting = false,
								Color = {Mode = 1, 127, 127, 0, 127},
								Location = {x = {0, "Pixel"}, y = {0, "Pixel"}, width = {100, "Percent"}, height = {100, "Percent"}},
								Contains = 
								{
								}
							}
						}
					}
				}
			}
		}
	}
}

function HealthBarUpdateHook(SenderProgramm, Message)
	
end

SpriteSheet = 
{
	path = "data/players/Player.png",
	tileWidth = 16,
	tileHeight = 16,
	
	TagsList = 
	{
		--{shiftX, shiftY, shiftZ, rotateX, rotateY, rotateZ, dirX, dirY, angle, equipPlace, equipModif}
		{0.35f, 0.34f, 0.0f, 0, 1, 0, -1, 0, 180.0f, "Hand", "Right"},
		{0.35f, 0.34f, 0.0f, 0, 1, 0, -1, 0, 0.0f, "Hand", "Left"},
		
		{0.63f, 0.34f, 0.0f, 0, 0, 1,  1, 0, 0.0f,   "Hand", "Right"},
		{0.35f, 0.34f, 0.0f, 0, 1, 0, -1, 0, 180.0f, "Hand", "Left"},
		{0.35f, 0.34f, 0.0f, 0, 0, 1,  1, 0, 0.0f,   "Hand", "Right"},
		
		{0.46f, 0.4f,  0.0f, 0, 1, 0, -1, 0, 180.0f, "Hand", "Right"},
		{0.45f, 0.32f, 0.0f, 0, 1, 0, -1, 0, 180.0f, "Hand", "Left"},
		
		{0.5f,  0.32f, 0.0f, 0, 0, 1, 1, 0, 0.0f, "Hand", "Right"},
		{0.45f, 0.4f,  0.0f, 0, 0, 1, 1, 0, 0.0f, "Hand", "Left"}
	},
		
	Images = 
	{		
		{0, 0, Tags = {0, 1}}, 
		{1, 0, Tags = {0, 1}},  
		{2, 0, Tags = {0, 1}},
		{3, 0, Tags = {0, 1}},
		{4, 0, Tags = {0, 1}},
		
		{0, 1, Tags = {2, 3}},  
		{1, 1, Tags = {2, 3}},   
		{2, 1, Tags = {2, 3}},
		{3, 1, Tags = {2, 3}},
		{4, 1, Tags = {2, 3}},

		{0, 2, Tags = {5, 6}},  
		{1, 2, Tags = {5, 6}},   
		{2, 2, Tags = {5, 6}},
		{3, 2, Tags = {5, 6}},
		
		{0, 3, Tags = {7, 8}},  
		{1, 3, Tags = {7, 8}},   
		{2, 3, Tags = {7, 8}},
		{3, 3, Tags = {7, 8}},
		
		animTag1 = {0.0f, 0.0f, 0.0f, 5.0f,   0, 0, 1, 1,0, "Hand", "Right"},
		animTag2 = {0.0f, 0.0f, 0.0f, 5.0f,   0, 0, 1, 1,0, "Hand", "Left"},
		animTag3 = {0.0f, 0.1f, 0.0f, 18.0f,  0, 0, 1, 1,0, "Hand", "Right"},
		animTag4 = {0.0f, 0.1f, 0.0f, 18.0f,  0, 0, 1, 1,0, "Hand", "Left"},
		animTag5 = {0.0f, 0.1f, 0.0f, -45.0f, 0, 0, 1, 1,0, "Hand", "Right"},
		animTag6 = {0.0f, 0.1f, 0.0f, -45.0f, 0, 0, 1, 1,0, "Hand", "Left"},
		{-1, -1, Tags = {animTag1, animTag2}},
		{-1, -1, Tags = {animTag3, animTag4}},
		{-1, -1, Tags = {animTag5, animTag6}}
	}
}

function updateHook(SenderObject, Message)
	if(Message) then
		SenderObject:getMainAnimation():updateFrame()
		if(Message["Arg"] == "PICKING_OBJECT" and Message["Sys"] == "PICK") then
	
		end
		
		if(Message["Arg"] == "CONTROLLERS" and Message["Sys"] == "LUACONTROLLERS") then
			MOVE_DIRECTION = {x = 0, y = 0}
			if Message["InterObject"]:isKeyDown("A", false) then
				SenderObject:getMainAnimation():pickAnimation(2)
				MOVE_DIRECTION.x = MOVE_DIRECTION.x + -1
			end
			if Message["InterObject"]:isKeyDown("D", false) then
				SenderObject:getMainAnimation():pickAnimation(3)
				MOVE_DIRECTION.x = MOVE_DIRECTION.x + 1
			end
			if Message["InterObject"]:isKeyDown("W", false) then
				SenderObject:getMainAnimation():pickAnimation(1)
				MOVE_DIRECTION.y = MOVE_DIRECTION.y + 1
			end
			
			if Message["InterObject"]:isKeyDown("S", false) then
				SenderObject:getMainAnimation():pickAnimation(0)
				MOVE_DIRECTION.y = MOVE_DIRECTION.y + -1
			end
			
			if not(MOVE_DIRECTION.x == 0) or not(MOVE_DIRECTION.y == 0) then
				SenderObject:sendMessage("MOVE", {DIRECTION = {MOVE_DIRECTION.x, MOVE_DIRECTION.y}, AUTO_VIEW_DIRECTION = true}) 
			else
				SenderObject:getMainAnimation():restart()
			end
			
			
			
			--if Message["Arg"]:isMouseButtonDown(0, true) then
			--	local SelectedObject = SenderObject:sendMessage("GET_OBJECT_BY_POS", SenderObject:sendMessage("GET_CURSOR_POS"))
			--	
			--	if SelectedObject then
			--		Pos1 = SenderObject:sendMessage("GET_POS", SelectedObject)
			--		Pos2 = SenderObject:sendMessage("GET_POS")
			--		SenderObject:sendMessage("ADD_TO_INVENTORY", SelectedObject)
			--	end
			--end 
			
			--if Message["InterObject"]:isMouseButtonDown(1, true) then
			--	local SelectedObject = SenderObject:sendMessage("GET_OBJECT_BY_POS", SenderObject:sendMessage("GET_CURSOR_POS"))
			--	if SelectedObject then
			--		SenderObject:sendMessage("SHOW_HIDE_INVECTORY", SelectedObject)
			--	end
			--end
		end
		
		--if(Message["Arg"] == "CURSOR_ON_OBJECT") then
		--	InteractObject:sendMessage("SHOW_HIDE_INVECTORY")
		--end
		
		SenderObject:sendMessage("DIRECT_CAM_ON")
		SenderObject:sendMessage("SET_PLAYER_POS")
	end
end

function loadAnimation(Object, stImagesArray)
	MainAnimation = Object:initMainAnimation(0, "Player")
	MainAnimation:createAnimation(0, "Back")
	MainAnimation:getAnimation(0):addFrame(stImagesArray:getImage(0), 200)
	MainAnimation:getAnimation(0):addFrame(stImagesArray:getImage(1), 200)
	MainAnimation:getAnimation(0):addFrame(stImagesArray:getImage(2), 200)
	MainAnimation:getAnimation(0):addFrame(stImagesArray:getImage(1), 200)
	MainAnimation:getAnimation(0):addFrame(stImagesArray:getImage(0), 200)
	MainAnimation:getAnimation(0):addFrame(stImagesArray:getImage(3), 200)
	MainAnimation:getAnimation(0):addFrame(stImagesArray:getImage(4), 200)
	MainAnimation:getAnimation(0):addFrame(stImagesArray:getImage(3), 200)
	MainAnimation:createAnimation(1, "Forward")
	MainAnimation:getAnimation(1):addFrame(stImagesArray:getImage(5), 200)
	MainAnimation:getAnimation(1):addFrame(stImagesArray:getImage(6), 200)
	MainAnimation:getAnimation(1):addFrame(stImagesArray:getImage(7), 200)
	MainAnimation:getAnimation(1):addFrame(stImagesArray:getImage(6), 200)
	MainAnimation:getAnimation(1):addFrame(stImagesArray:getImage(5), 200)
	MainAnimation:getAnimation(1):addFrame(stImagesArray:getImage(8), 200)
	MainAnimation:getAnimation(1):addFrame(stImagesArray:getImage(9), 200)
	MainAnimation:getAnimation(1):addFrame(stImagesArray:getImage(8), 200)
	MainAnimation:createAnimation(2, "Right")
	MainAnimation:getAnimation(2):addFrame(stImagesArray:getImage(10), 250)
	MainAnimation:getAnimation(2):addFrame(stImagesArray:getImage(11), 250)
	MainAnimation:getAnimation(2):addFrame(stImagesArray:getImage(13), 250)
	MainAnimation:getAnimation(2):addFrame(stImagesArray:getImage(10), 250)
	MainAnimation:getAnimation(2):addFrame(stImagesArray:getImage(12), 250)
	MainAnimation:createAnimation(3, "Left")
	MainAnimation:getAnimation(3):addFrame(stImagesArray:getImage(14), 250)
	MainAnimation:getAnimation(3):addFrame(stImagesArray:getImage(15), 250)
	MainAnimation:getAnimation(3):addFrame(stImagesArray:getImage(17), 250)
	MainAnimation:getAnimation(3):addFrame(stImagesArray:getImage(14), 250)
	MainAnimation:getAnimation(3):addFrame(stImagesArray:getImage(16), 250)
	MainAnimation:pickAnimation(0)
end